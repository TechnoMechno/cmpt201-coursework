// lab2.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main(void) {
    char *line = NULL;
    size_t cap = 0;

    while (1) {
        printf("Enter programs to run.\n> ");
        fflush(stdout);

        ssize_t len = getline(&line, &cap, stdin);
        if (len == -1) {
            // EOF (Ctrl+D) or read error â†’ exit the loop
            break;
        }

        // Trim trailing newline
        if (len > 0 && line[len - 1] == '\n') {
            line[len - 1] = '\0';
        }

        // Skip empty lines
        if (line[0] == '\0') {
            continue;
        }

        pid_t pid = fork();
        if (pid < 0) {
            perror("fork");
            continue;
        }

        if (pid == 0) {
            // Child: replace image with the requested program
            execl(line, line, (char *)NULL);

            // If we get here, exec failed
            fprintf(stderr, "Exec failure\n");
            // Optionally: perror("execl");
            _exit(127);
        } else {
            // Parent: wait for child to finish
            int status = 0;
            if (waitpid(pid, &status, 0) == -1) {
                perror("waitpid");
            }
            // (No need to print exit info; behavior matches the example)
        }
    }

    free(line);
    return 0;
}
